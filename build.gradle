plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.7'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.beyond'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
//	아래 의존성은 db연결 및 관리를 위한 의존성 : jdbc, mybatis, jpa
//	db의존성은 바로 db정보를 찾아 연결을 시도하기때문에,
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // mariadb 드라이버

//	spring 웹서비스를 위한 기본 의존성
    implementation 'org.springframework.boot:spring-boot-starter-web'

//	getter, setter등 보일러플레이트 코드를 어노테이션으로 대체시켜주는 등 자동생성 및 개발의 편의성을 증대시켜주는 의존성
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

//	테스트 코드 작성을 위한 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

//	서버에서 화면을 만들어서 렌더링(화면을 준다) 해주기 위한 기술
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

//	소스수정 때마다 서버 재시작 불편한 경우 설정(서버 시작 자동화)
//	implementation 'org.springframework.boot:spring-boot-devtools'

//	값 검증을 위한 validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

//	로그인 구현을 위한 security 의존성
    implementation 'org.springframework.boot:spring-boot-starter-security'

//    jwt토큰 관련 라이브러리 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'  // JSON 처리에 필요

    //    파일처리를 위한 aws 의존성 추가
    implementation 'software.amazon.awssdk:s3:2.17.58'

//    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2' // swagger
//    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2' //swagger

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0' // Swagger 사용시 ControllerAdvice로 인한 오류 피하기 위한 의존성

    // 프로젝트의 효율성(성능 최적화, 배포 크기의 최소화)을 위해서 런타임에만 필요한 것, 컴파일 시 필요한 것, 두 사상황 모두에 필요한 것으로 구분한다.
}

tasks.named('test') {
    useJUnitPlatform()
}
